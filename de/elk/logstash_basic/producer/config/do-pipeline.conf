input {
    beats {
        port => "5044"
    }
}

# The filter part of this file is commented out to indicate that it is
# optional.

filter {
    ruby {
        code => "
            filename = event.get('source').split('/').last
            dir = event.get('source').sub('/opt/TerraceTims/log','')
            event.set('dir', dir)
            event.set('filename', filename)"
    }
    
    mutate {
        add_field => { "cluster" => "cluster3" }
        add_field => { "file_name" => "%{filename}" }
    }
}

output {
#   stdout { codec => rubydebug }

    if [dir] =~ "\/catalina\/webmail" and [filename] =~ "access" { 
        kafka {
            bootstrap_servers => "cloudera-node1:9092,cloudera-node2:9092,cloudera-node3:9092"
            topic_id => "do-user-access-log"
            compression_type => "lz4"
            codec => json{}
        }
    }

    if [dir] =~ "\/catalina\/webadmin" and [filename] =~ "access" { 
        kafka {
            bootstrap_servers => "cloudera-node1:9092,cloudera-node2:9092,cloudera-node3:9092"
            topic_id => "do-admin-access-log"
            compression_type => "lz4"
            codec => json{}
        }
    }

    if [dir] =~ "\/t4imapd" {
        kafka {
            bootstrap_servers => "cloudera-node1:9092,cloudera-node2:9092,cloudera-node3:9092"
            topic_id => "do-imap-log"
            compression_type => "lz4"
            codec => json{}
        }
    }

    if [dir] =~ "\/tmss-routed" or "\/tmtad" or "\/tremoted"{
        kafka {
            bootstrap_servers => "cloudera-node1:9092,cloudera-node2:9092,cloudera-node3:9092"
            topic_id => "do-mail-log"
            compression_type => "lz4"
            codec => json{}
        }
    }

    file {
        path => "/data/do_log%{dir}/%{[beat][hostname]}_%{filename}"
        codec => line { format => "%{message}"}
    }
}

